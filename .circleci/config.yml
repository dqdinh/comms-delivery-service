version: 2

defaults:
- &executor
  docker:
  - image: circleci/openjdk:8-jdk

- &save_dependencies_cache
  save_cache:
    key: dependencies-cache-{{ .Branch }}
    paths:
    - /home/circleci/.ivy2
    - /home/circleci/.sbt
    - project/target/resolution-cache
    - target/resolution-cache


- &restore_dependencies_cache
  restore_cache:
    keys:
    - dependencies-{{ .Branch }}
    - dependencies

- &save_pip_cache
  save_cache:
    key: pip-cache-{{ .Branch }}
    paths:
    - /home/circleci/.cache/pip

- &restore_pip_cache
  restore_cache:
    keys:
    - pip-{{ .Branch }}
    - pip

- &install_python_pip
  run:
    name: Install python-dev, pip
    command: sudo apt-get update && sudo apt-get install -y libpython2.7-dev python-pip

- &install_awscli_credstash
  run:
    name: Install awscli and credstash
    command: sudo pip install awscli credstash==1.14.0

- &create_aws_credentials
  run:
    name: Login to AWS as circleci seems to ignore the setting
    command: |
      mkdir ~/.aws
      echo "[default]" >> ~/.aws/credentials
      echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
      echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials

- &attach_workspace
  attach_workspace:
    at: .



jobs:

  build:

    <<: *executor

    steps:
    - checkout

    - *restore_pip_cache

    - *install_python_pip

    - *install_awscli_credstash

    - *create_aws_credentials

    - *save_pip_cache

    - *restore_dependencies_cache

    - run: sbt update

    - *save_dependencies_cache

    - run: sbt scalafmt::test

    - run: sbt test:scalafmt::test

    - run: sbt test:compile

    - run: sbt servicetest:compile

    - persist_to_workspace:
        root: .
        paths:
          - target


  test:

    <<: *executor

    steps:

    - checkout

    - *attach_workspace

    - *restore_dependencies_cache

    - run: sbt test

    - store_test_results:
        path: target/test-reports


  servicetest:

    machine: true

    steps:

    - checkout

    - *attach_workspace

    - *restore_pip_cache

    - *install_python_pip

    - *install_awscli_credstash

    - *save_pip_cache

    - *create_aws_credentials

    - run: sbt servicetest:test

    - store_test_results:
        path: target/service-reports


  deploy:

    <<: *executor

    steps:

    - setup_remote_docker:
        docker_layer_caching: true

    - checkout

    - *attach_workspace

    - *restore_pip_cache

    - *install_python_pip

    - *install_awscli_credstash

    - *save_pip_cache

    - *create_aws_credentials

    - deploy:
        name: Deploy if master branch
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" -a "${CIRCLE_PROJECT_USERNAME}" == "ovotech" ]; then
            git clone git@github.com:ovotech/comms-ci-scripts
            comms-ci-scripts/publish_docker_image.sh
            comms-ci-scripts/deploy_to_ecs.sh -s delivery UAT aws/container-definition.json
            git clone git@github.com:ovotech/comms-e2e-tests && cd comms-e2e-tests && sbt test && cd ..
            comms-ci-scripts/deploy_to_ecs.sh -s delivery PRD aws/container-definition.json
            comms-ci-scripts/send_librato_deployment_event.sh
            comms-ci-scripts/comment_on_last_merged_pr.sh
            comms-ci-scripts/notify_shipit.sh
          fi

    - deploy:
        name: Deploy to UAT only if deploy-to-uat branch
        command: |
          if [ "${CIRCLE_BRANCH}" == "deploy-to-uat" -a "${CIRCLE_PROJECT_USERNAME}" == "ovotech" ]; then
            git clone git@github.com:ovotech/comms-ci-scripts
            comms-ci-scripts/publish_docker_image.sh
            comms-ci-scripts/deploy_to_ecs.sh -s delivery UAT aws/container-definition.json
          fi


workflows:
  version: 2

  build:
    jobs:
    - build

    - test:
        requires:
        - build

    - servicetest:
        requires:
        - build

    - deploy:
        requires:
        - test
        - servicetest
        filters:
          branches:
            only:
              - master
              - deploy-to-uat


experimental:
  notify:
    branches:
      only:
        - master
