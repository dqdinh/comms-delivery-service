twilio.retry {
  attempts = 5
  interval = 1 second
}

dynamo{
  aws-region = "eu-west-1"
  retry-config{
    interval = 1 second
    attempts = 5
  }
}

kafka {
  aiven.group-id = "comms-delivery-service"
  retry {
    attempts = 5
    initial-interval = 1 second
    exponent = 2
  }
}

mailgun{
  host = "https://api.mailgun.net"
  retry {
    attempts = 5
    interval = 1 second
  }

  akka.kafka.producer {
    # Tuning parameter of how many sends that can run in parallel.
    parallelism = 100

    # How long to wait for `KafkaProducer.close`
    close-timeout = 60s

    # Fully qualified config path which holds the dispatcher configuration
    # to be used by the producer stages. Some blocking may occur.
    # When this value is empty, the dispatcher configured for the stream
    # will be used.
    use-dispatcher = "akka.kafka.default-dispatcher"
  }

  akka.kafka.consumer {
    wakeup-timeout = 5s
    max-wakeups = 24
  }

  akka {
    loggers = ["akka.event.slf4j.Slf4jLogger"]
    event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
    logger-startup-timeout = 10s
  }
}