kafka {
  group-id = "comms-delivery-service"

  topics {
    composed {
      email.v2 = "comms.composed.email.v2"
      sms.v2   = "comms.composed.sms.v2"
    }
    failed.v2 = "comms.failed.v2"
    issued.for.delivery.v2 = "comms.issued.for.delivery.v2"
  }

  producer.retry {
    attempts = 5
    initialInterval = 1 second
    exponent = 2.0
  }
}

mailgun {
  host = "https://api.mailgun.net"
  attempts = 5
  interval = 1 second
}


twilio{
  attempts = 5
  interval = 1 second
}

akka.kafka.producer {
  # Tuning parameter of how many sends that can run in parallel.
  parallelism = 100

  # How long to wait for `KafkaProducer.close`
  close-timeout = 60s

  # Fully qualified config path which holds the dispatcher configuration
  # to be used by the producer stages. Some blocking may occur.
  # When this value is empty, the dispatcher configured for the stream
  # will be used.
  use-dispatcher = "akka.kafka.default-dispatcher"
}

akka.kafka.consumer {
  wakeup-timeout = 5s
  max-wakeups = 24
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  logger-startup-timeout = 10s
}